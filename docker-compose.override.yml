# Override `$ docker compose ...` configuration for development or testing here in this
# repo checkout.  Everything that may be used outside this checkout should be in
# `./docker-compose.yml`.
version: "3.8"

services:

  ## Configuration specific to this checkout
  python-project-structure:
    image: "merpatterson/python-project-structure:${PYTHON_ENV:-py310}-${DOCKER_BRANCH_TAG:-develop}"
    container_name: "python-project-structure-checkout"
    build:
      context: "${CHECKOUT_DIR}/"
      args:
        PYTHON_MINOR: "${PYTHON_MINOR:-3.10}"
        PYTHON_ENV: "${PYTHON_ENV:-py310}"
        VERSION: "${VERSION:-}"
    volumes:
      # Preserve caches caches between container runs
      - "${CHECKOUT_DIR}/home/:/home/python-project-structure/"

  ## Container for use by developers
  python-project-structure-devel:
    image: "merpatterson/python-project-structure:devel-${PYTHON_ENV:-py310}-${DOCKER_BRANCH_TAG:-develop}"
    container_name: "python-project-structure-devel"
    build:
      context: "${CHECKOUT_DIR}/"
      dockerfile: "${CHECKOUT_DIR}/Dockerfile.devel"
      args:
        PYTHON_MINOR: "${PYTHON_MINOR:-3.10}"
        PYTHON_ENV: "${PYTHON_ENV:-py310}"
        VERSION: "${VERSION:-}"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      # Make the run-time user configurable in `./.env`
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-${PUID:-1000}}"
      # Variables from the environment we want to be passed through into the container:
      CI: "${CI:-false}"
      # DEBUG: "true"
    volumes:
      # Ensure local changes are reflected inside the container.
      - "${CHECKOUT_DIR}/bin/entrypoint:/usr/local/bin/entrypoint"
      - "${CHECKOUT_DIR}/:/usr/local/src/python-project-structure/"
      # Preserve caches caches between container runs
      - "${CHECKOUT_DIR}/home/:/home/python-project-structure/"
      # Avoid any clashes between image variants and/or the local host at both build and
      # run-time.
      - "${CHECKOUT_DIR}/var/docker/${PYTHON_ENV:-py310}/:/usr/local/src/python-project-structure/var/"
      - "${CHECKOUT_DIR}/var/docker/${PYTHON_ENV:-py310}/.tox/:/usr/local/src/python-project-structure/.tox/"
      - "${CHECKOUT_DIR}/var/docker/${PYTHON_ENV:-py310}/python_project_structure.egg-info/:/usr/local/src/python-project-structure/src/python_project_structure.egg-info/"

  ## Contianers during development and release

  # https://github.com/hadolint/hadolint#how-to-use
  hadolint:
    image: "hadolint/hadolint"
    environment:
      TZ: "${TZ:-Etc/UTC}"
    volumes:
      - "${CHECKOUT_DIR}/:/usr/local/src/python-project-structure/"
    working_dir: "/usr/local/src/python-project-structure/"

  pandoc:
    image: "pandoc/core"
    user: "${PUID:-1000}:${PGID:-${PUID:-1000}}"
    environment:
      TZ: "${TZ:-Etc/UTC}"
    volumes:
      - "${CHECKOUT_DIR}/:/data/"
    command: >-
      "./README.rst" -f "rst" -t "markdown" -o "./README.md"

  docker-pushrm:
    image: "chko/docker-pushrm"
    depends_on:
      pandoc:
        condition: "service_completed_successfully"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      DOCKER_USER: "${DOCKER_USER:-merpatterson}"
      DOCKER_PASS: "${DOCKER_PASS}"
    volumes:
      - "${CHECKOUT_DIR}/:/data/"
    command: >-
      --file "/data/README.md" --short "Python project structure foundation or template"
      --debug "merpatterson/python-project-structure"

  ## Container for use by end users
  build-host:
    image: "merpatterson/python-project-structure:build-host"
    build: "${CHECKOUT_DIR}/build-host/"
    privileged: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${CHECKOUT_DIR}/:${CHECKOUT_DIR}"
      - "${CHECKOUT_DIR}/build-host/bin/entrypoint:/usr/local/bin/entrypoint"
      # Share local SSH authentication to repository remotes
      - "~/.ssh/:/home/runner/.ssh/"
    env_file: "./.env"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      PUID: "${PUID:-1000}"
      PGID: "${DOCKER_GID:-${PGID:-${PUID:-1000}}}"
      # DEBUG: "true"
    working_dir: "${CHECKOUT_DIR}"
    command: >-
      make -e build-docker test-docker release-bump release

  gitlab-release-cli:
    image: "registry.gitlab.com/gitlab-org/release-cli:latest"
    environment:
      CI_JOB_TOKEN: "${CI_JOB_TOKEN:-}"
    volumes:
      - "./:/usr/local/src/python-project-structure/"
    working_dir: "/usr/local/src/python-project-structure/"
