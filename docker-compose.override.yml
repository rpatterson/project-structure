# SPDX-FileCopyrightText: 2023 Ross Patterson <me@rpatterson.net>
#
# SPDX-License-Identifier: MIT

# Override `$ docker compose ...` configuration for development or testing here in this
# repo checkout.  Everything that may be used outside this checkout should be in
# `./docker-compose.yml`.
version: "3.8"

services:

  # Configuration specific to development:
  project-structure:
    image: "${DOCKER_USER:?}/project-structure:${DOCKER_BRANCH_TAG:-develop}"
    container_name: "project-structure-checkout"
    build:
      context: "${CHECKOUT_DIR:-.}/"
      target: "user"
      args:
        VERSION: "${VERSION:-}"
    volumes:
      # Preserve caches caches between container runs
      - "${CHECKOUT_DIR:-.}/home/:/home/project-structure/"

  ## Contianers used for development and release:

  # Container for use by developers:
  project-structure-devel:
    image: "${DOCKER_USER:?}/project-structure:devel-${DOCKER_BRANCH_TAG:-develop}"
    container_name: "project-structure-devel"
    profiles:
      - "test"
    build:
      context: "${CHECKOUT_DIR:-.}/"
      target: "devel"
      args:
        VERSION: "${VERSION:-}"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      # Make the run-time user configurable in `./.env`
      PUID: "${PUID:-1000}"
      PGID: "${PGID:-${PUID:-1000}}"
      # Variables from the environment we want to be passed through into the container:
      CI: "${CI:-false}"
      # DEBUG: "true"
    volumes:
      # Ensure local changes are reflected inside the container.
      - "${CHECKOUT_DIR:-.}/bin/entrypoint:/usr/local/bin/entrypoint"
      - "${CHECKOUT_DIR:-.}/:/usr/local/src/project-structure/"
      # Preserve caches caches between container runs
      - "${CHECKOUT_DIR:-.}/home/:/home/project-structure/"
      # Avoid any clashes between image variants and/or the local host at both build and
      # run-time.
      - "${CHECKOUT_DIR:-.}/var-docker/:/usr/local/src/project-structure/var/"

  # https://github.com/hadolint/hadolint#how-to-use
  hadolint:
    image: "ghcr.io/hadolint/hadolint"
    profiles:
      - "test"
    environment:
      TZ: "${TZ:-Etc/UTC}"
    volumes:
      - "${CHECKOUT_DIR:-.}/:/usr/local/src/project-structure/"
    working_dir: "/usr/local/src/project-structure/"
    command: >-
      hadolint "./Dockerfile"

  pandoc:
    image: "pandoc/core"
    profiles:
      - "release"
    user: "${PUID:-1000}:${PGID:-${PUID:-1000}}"
    environment:
      TZ: "${TZ:-Etc/UTC}"
    volumes:
      - "${CHECKOUT_DIR:-.}/:/data/"
    entrypoint: "ash"
    # Strip reStructuredText directives unsupported in Markdown before converting and
    # converted Markdown that isn't widely supported, e.g. table of contents and tables
    # respectively:
    command: >-
      -xeu -c '
        grep -Ev "^ *\.\. +(contents)::.*" "./README.rst" |
        pandoc -f "rst" -t "gfm" | grep -Ev "^(\+-+\+|\|.*\|)$" >"./README.md"
      '

  docker-pushrm:
    image: "chko/docker-pushrm"
    depends_on:
      pandoc:
        condition: "service_completed_successfully"
    profiles:
      - "release"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      DOCKER_USER: "${DOCKER_USER:-}"
      DOCKER_PASS: "${DOCKER_PASS:-}"
    volumes:
      - "${CHECKOUT_DIR:-.}/:/data/"
    command: >-
      --file "/data/var/README.md"
      --short "project structure foundation or template"
      --debug "${DOCKER_USER:-}/project-structure"

  gitlab-release-cli:
    image: "registry.gitlab.com/gitlab-org/release-cli:latest"
    profiles:
      - "release"
    environment:
      CI_JOB_TOKEN: "${CI_JOB_TOKEN:-}"
    volumes:
      - "./:/usr/local/src/project-structure/"
    working_dir: "/usr/local/src/project-structure/"

  ## Containers for simulating CI/CD:

  build-host:
    image: "${DOCKER_USER:-}/project-structure:build-host"
    profiles:
      - "ci"
    build: "${CHECKOUT_DIR:-.}/build-host/"
    privileged: true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "${CHECKOUT_DIR:-.}/:${CHECKOUT_DIR:-.}"
      - "${CHECKOUT_DIR:-.}/build-host/bin/entrypoint:/usr/local/bin/entrypoint"
      # Share local SSH authentication to repository remotes
      - "~/.ssh/:/home/runner/.ssh/"
    env_file: "./.env"
    environment:
      TZ: "${TZ:-Etc/UTC}"
      PUID: "${PUID:-1000}"
      PGID: "${DOCKER_GID:-${PGID:-${PUID:-1000}}}"
      # DEBUG: "true"
    working_dir: "${CHECKOUT_DIR:-.}"
    command: >-
      make -e build-docker test-docker release
