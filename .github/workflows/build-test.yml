# SPDX-FileCopyrightText: 2023 Ross Patterson <me@rpatterson.net>
#
# SPDX-License-Identifier: MIT

name: "Build and Test"

# TEMPLATE: If the project uses GitHub Actions, then add the following secrets to the
# project:
#
# - `CODECOV_TOKEN`:
#   Add your project to https://app.codecov.io/gl and use the generated token
#
# - `DOCKER_PASS`:
#   A Docker Hub Personal Access Token
#
# - `GPG_PASSPHRASE`:
#   See the comments towards the bottom of the `./Makefile`
#
# - `GPG_SIGNING_PRIVATE_KEY`:
#   See the comments towards the bottom of the `./Makefile`
#
# - `PROJECT_GITHUB_PAT`:
#   A GitHub "Classic" Personal Access Token with scopes: `repo`, `workflow`,
#   `packages`, and `project`
#
# Add them through the web UI or use the GitHub command-line tool:
# https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository

env:
  PUID: "1001"
  PGID: "123"
  # Project specific values:
  PROJECT_NAMESPACE: "rpatterson"
  PROJECT_NAME: "project-structure"
  GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
  GPG_SIGNING_PRIVATE_KEY: "${{ secrets.GPG_SIGNING_PRIVATE_KEY }}"
  DOCKER_PASS: "${{ secrets.DOCKER_PASS }}"
  # Enable the GitHub command-line:
  PROJECT_GITHUB_PAT: "${{ secrets.PROJECT_GITHUB_PAT }}"
  # Tell the `./Makefile` about GitHub specific environment details:
  CI_IS_FORK: >-
    ${{
      (
        (
          (github.repository_owner != '${PROJECT_NAMESPACE}')
          || (github.event.pull_request.head.repo.owner.login != '${PROJECT_NAMESPACE}')
        ) && 'true'
      ) || 'false'
    }}

on:
  # Run only on branches, not tags:
  # https://github.com/orgs/community/discussions/25615#discussioncomment-3397691
  push:
    branches:
      - "**"
    tags:
      - "!**"
      # Also run for open pull requests, including when pushed to:
  pull_request: {}

jobs:
  build-test:
    runs-on: "ubuntu-latest"
    container:
      image: "ghcr.io/rpatterson/project-structure:build-host"
      env:
        CHECKOUT_DIR: "${{ github.workspace }}"
    permissions:
      packages: "write"
      checks: "write"
    name: "build-test"
    steps:
      # Shared or common set up:
      - name: "Checkout source from VCS"
        uses: "actions/checkout@master"
      # TODO: Debug stale venv issues and restore cache after fixing.
      - name: "Change checkout owner"
        # https://stackoverflow.com/a/58474340/624787
        run: >-
          chown -R ${PUID}:${PGID} ./ &&
          git config --global --add safe.directory
          /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}

      # Delegate steps agnostic of the CI/CD platform to the `./Makefile`:
      - name: "Build image and run tests and checks in a container"
        run: >-
          entrypoint make -e test-push build-docker test-docker test-clean

      # Upload build artifacts:
      # https://github.com/actions/upload-artifact#usage
      - name: "Archive test suite reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "test-suite-reports"
          path: |
            ./build/*test*
      # https://github.com/marketplace/actions/test-reporter#example
      - name: "Publish test suite report"
        uses: "dorny/test-reporter@main"
        # run this step even if preceding step failed
        if: >-
          (success() || failure())
          && (
            (! github.event.pull_request)
            || ! (
              (github.repository_owner == '${PROJECT_NAMESPACE}')
              && (
                github.event.pull_request.head.repo.owner.login
                != '${PROJECT_NAMESPACE}'
              )
            )
          )
        with:
          name: "Test Suite Reports"
          path: >-
            ./build/*test-junit.xml
          reporter: "java-junit"
      - name: "Archive code coverage reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "code-coverage-reports"
          path: |
            ./build/*/.coverage*
            ./build/*/coverage*
            ./build/*/htmlcov*
      - name: "Archive linter reports"
        uses: "actions/upload-artifact@master"
        with:
          name: "linter-reports"
          path: |
            ./build/*/*lint*
